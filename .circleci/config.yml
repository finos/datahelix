version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:

  check_license_messages:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    working_directory: ~/datahelix/
    steps:
      - checkout
      - run:
          name: Set header script priviledges
          command: chmod +x check-file-headers.sh
      - run:
          name: Check commit messages
          command: ./check-file-headers.sh

  check_commit_message:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    working_directory: ~/datahelix/
    steps:
      - checkout
      - run:
          name: Set commit script priviledges
          command: chmod +x commit-check.sh
      - run:
          name: Check commit messages
          command: ./commit-check.sh

  build:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout
      # If changing build tools be sure to update BuildAndRun.md in docs
      - run: gradle fatJar :output:test :profile:test :core:test :common:test :orchestrator:test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - codecov/upload:
          file: schemas/target/jacoco-reports/jacoco.xml
      - codecov/upload:
          file: generator/target/jacoco-reports/jacoco.xml

  test_playground_status:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout
      - run: gradle :playground:test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results

  # Release generates version x.y.z for:
  # x - BREAKING CHANGE included in commit message body
  # y - feat
  # z - fix, perf
  # Otherwise no release is created.
  # See https://github.com/tschulte/gradle-semantic-release-plugin/blob/master/src/main/groovy/de/gliderpilot/gradle/semanticrelease/SemanticReleaseChangeLogService.groovy
  release:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - add_ssh_keys:
          fingerprints:
            - "3f:77:2b:8b:bb:87:d1:ce:14:d5:be:dd:6d:6b:ef:1c"
      - checkout
      - run: gradle fatJar :output:test :profile:test :core:test :common:test :orchestrator:test
      - run: gradle distZip
      - run: gradle release -Dorg.ajoberstar.grgit.auth.username=${GH_TOKEN} -Dorg.ajoberstar.grgit.auth.password
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - codecov/upload:
          file: schemas/target/jacoco-reports/jacoco.xml
      - codecov/upload:
          file: generator/target/jacoco-reports/jacoco.xml

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test_playground_status
  build_and_test:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - check_commit_message:
          filters:
            branches:
              ignore: master
      - check_license_messages:
          filters:
            branches:
              ignore: master

  release:
    jobs:
      - release:
          filters:
            branches:
              only: master
